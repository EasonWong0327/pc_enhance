TASK:优化代码，切块或者切片

思考：
1.origin和compress进行切块（origin和compress是一对对的对应形式）
    step1：确定切块方式
        切块方式1： 计算每张ply coordinate的min和max，再进行切块，这样每张ply的block数量不一致且索引无法对应。
        切块方式2： 把ply放在一个固定尺寸的立方体（例如1024x1024x1024）中，然后将其切分成较小的立方体块（例如256x256x256），这样
                  得到的block数量和索引可以保持一致。

    step2：确定切块尺寸（check_ply_size.py）
        output:
                所有PLY文件的坐标最小值:
                x轴最小值: 0.0
                y轴最小值: 0.0
                z轴最小值: 0.0
                所有PLY文件的坐标最大值:
                x轴最大值: 616.0
                y轴最大值: 1024.0
                z轴最大值: 660.0

            为了省事，确定整体的立方体尺寸为1024*1024*1024（x,z会有很多空白区域）

    step3: 切块优化
        1.如果一些block为空或者里面的数据少于某个阈值（10%？），舍弃这个block（以origin图片为主）
            output：
                实验证明，10%太大了，点云数据极其稀疏。
                按照256*256*256来切，10%的阈值是1677721
                    加载点数量：968800
                    阈值点数：1677721 . block点数：102779
                    阈值点数：1677721 . block点数：397
                    阈值点数：1677721 . block点数：132380
                    阈值点数：1677721 . block点数：18799
                    阈值点数：1677721 . block点数：177233
                    阈值点数：1677721 . block点数：82934
                    阈值点数：1677721 . block点数：118250
                    阈值点数：1677721 . block点数：29011
                    阈值点数：1677721 . block点数：46464
                    阈值点数：1677721 . block点数：55117
                    阈值点数：1677721 . block点数：47816
                    阈值点数：1677721 . block点数：36382
                    阈值点数：1677721 . block点数：89220
                    阈值点数：1677721 . block点数：45650
                    阈值点数：1677721 . block点数：45898
                    阈值点数：1677721 . block点数：31480
                    阈值点数：1677721 . block点数：94565
                    阈值点数：1677721 . block点数：412
                    阈值点数：1677721 . block点数：120702
                    阈值点数：1677721 . block点数：18183
                    阈值点数：1677721 . block点数：156101
                    阈值点数：1677721 . block点数：77627
                    阈值点数：1677721 . block点数：105541
                    阈值点数：1677721 . block点数：29098
                    阈值点数：1677721 . block点数：43080
                    阈值点数：1677721 . block点数：50137
                    阈值点数：1677721 . block点数：43247
                    阈值点数：1677721 . block点数：34702
                    阈值点数：1677721 . block点数：83525
                    阈值点数：1677721 . block点数：41567
                    阈值点数：1677721 . block点数：40814
                    阈值点数：1677721 . block点数：29499
        2.滑动窗口（暂时不滑动）

        BUG记录:block里面的点不能太稀疏，造成ME.SparseTensor结果的shape为(2,3)，可能两个block全是0的原因

    step4: block点数保持一致（adjust_points）
        以origin的block为主，假设1000个，对应compress的block也要保持1000个（优化点）
        经验记录：如果对compress进行补齐等于origin，不能进行点的复制，ME.SparseTensor这一步操作会打回原形。
                另外compress.ply有重复的点，例如S26C03R03_rec_0537.ply的968526行附近重复


    step5：切块成功
        第 0 对文件切块完成，A: 15 块, B: 15 块.  其中一块的形状: (102779, 6)
        -------------------------------开始打印每块的点数------------------------
        第0块:  (102779, 6)
        第1块:  (132380, 6)
        第2块:  (18799, 6)
        第3块:  (177233, 6)
        第4块:  (82934, 6)
        第5块:  (118250, 6)
        第6块:  (29011, 6)
        第7块:  (46464, 6)
        第8块:  (55117, 6)
        第9块:  (47816, 6)
        第10块:  (36382, 6)
        第11块:  (89220, 6)
        第12块:  (45650, 6)
        第13块:  (45898, 6)
        第14块:  (31480, 6)

2.新建Dataset类PointCloudDataset，每N块block合并成一个批次训练

3.输入模型训练（简化版模型）

4.保存模型
